#!/usr/bin/env python3

import json
import locale
import sys
import emails
import reports


def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  max_revenue = {"revenue": 0}
  max_model_sold = {'total_sales':0}
  years = {}
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item

    # Calculate the most car model sold 
    if item['total_sales'] > max_model_sold['total_sales']:
      max_model_sold = item

    # TODO: also handle most popular car_year
    # Calculate the total car sales in a year

    if item['car']['car_year'] not in years:
      years[item['car']['car_year']] = item['total_sales']
    else:
      years[item['car']['car_year']] = years[item['car']['car_year']] + item['total_sales']
  # Grabbing the max number of cars sold for a year.
  max = 0
  for k,v in years.items():
    if v > max:
      max = v
      in_year = k
    continue

  # Make summary
  summary = [ "The {} generated the most revenue: ${}".format(
      format_car(max_revenue["car"]), max_revenue["revenue"]),
    "The {} had the most sales: {}".format(format_car(max_model_sold['car']), max_model_sold['total_sales']), 
    "The most popular year was {} with {} sales.".format(in_year, max)
  ]

  return summary


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)
  print(summary)
  additional_info = "{}\n{}\n{}\n".format(summary[0], summary[1], summary[2])
  print(additional_info)
  # turn this into a PDF report
  reports.generate('/tmp/cars.pdf', 'Sales summary for last month', additional_info, cars_dict_to_table(data))
  # send the PDF report as an email attachment
  message = emails.generate('kevin@ankitaelectronics.in', 'kevin@ankitaelectronics.in', 'Sales summary for last month', additional_info, '/tmp/cars.pdf')
  # send the email
  emails.send(message)

if __name__ == "__main__":
  main(sys.argv)
